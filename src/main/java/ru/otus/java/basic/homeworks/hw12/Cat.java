package ru.otus.java.basic.homeworks.hw12;

/**
 * Реализуйте классы Тарелка (максимальное количество еды, текущее количество еды) и Кот (имя, аппетит).
 * Количество еды измеряем в условных единицах.
 * <p>
 * При создании тарелки указывается ее объем и она полностью заполняется едой
 * В тарелке должен быть метод, позволяющий добавить еду в тарелку. После добавления в тарелке не может оказаться еды больше максимума
 * В тарелке должен быть boolean метод уменьшения количества еды, при этом после такого уменьшения,
 * в тарелке не может оказаться отрицательное количество еды (если удалось уменьшить еду так, чтобы в тарелке осталось >= 0 кусков еды,
 * то возвращаем true, в противном случае - false).
 * Каждому коту нужно добавить поле сытость (когда создаем котов, они голодны).
 * Если коту удалось покушать (хватило еды), сытость = true.
 * Считаем, что если коту мало еды в тарелке, то он её просто не трогает,
 * то есть не может быть наполовину сыт (это сделано для упрощения логики программы).
 * Создать массив котов и тарелку с едой, попросить всех котов покушать из этой тарелки и потом вывести информацию о сытости котов в консоль.
 */
public class Cat {
    private String name;
    private int appetite;
    private boolean isFull;

    public String getName() {
        return name;
    }

    public int getAppetite() {
        return appetite;
    }

    public Cat(String name, int appetite) {
        this.name = name;
        this.appetite = appetite;
        this.isFull = false;
    }

    void info() {
        if (isFull) {
            System.out.println(name + " сыт");
            return;
        }
        System.out.println(name + " голоден");
    }

    public void eat(Plate plate) {
        if (plate.decreaseFood(appetite)) {
            isFull = true;
            System.out.println(name + " поел и теперь сыт.");
        } else {
            System.out.println(name + " не смог поесть. В тарелке недостаточно еды.");
        }
    }
}